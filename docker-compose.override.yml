services:

  ecommerce.data:
     container_name: ecommerce.data
     environment:
       - ACCEPT_EULA=Y
       - MSSQL_SA_PASSWORD=Kishor25
      
     ports:
       - "1478:1433"
     volumes:
       - ${eCommerce_Path}/Data:/var/opt/mssql/data
     networks:
      - ecommerce-microservice-network
     # network_mode: zap-can

  ecommerce.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      # - ASPNETCORE_HTTPS_PORTS=8081
      - "ConnectionStrings__eCommerce=Server=ecommerce.data;Database=eCommerce.API;User Id=sa;Password=Kishor25;TrustServerCertificate=True;"
    ports:
      - "61321:8080"
      - "61322:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - ecommerce.data
    networks:
      - ecommerce-microservice-network
    # network_mode: zap-can

 

  product.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - "ConnectionStrings__productService=Server=ecommerce.data;Database=Product.API;User Id=sa;Password=Kishor25;TrustServerCertificate=True;"
    ports:
      - "62221:8080"
      - "62222:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - ecommerce.data
    networks:
      - ecommerce-microservice-network
    # network_mode: zap-can


  order.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      # - ASPNETCORE_HTTPS_PORTS=8081
      - UserMicroServiceURL=ecommerce.api
      - UsersMicroservicePort=61321
      - "ConnectionStrings__OrderConn=Server=ecommerce.data;Database=Order.API;User Id=sa;Password=Kishor25;TrustServerCertificate=True;"
    ports:
      - "65221:8080"
      - "65222:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - ecommerce.data
    networks:
      - ecommerce-microservice-network
    # network_mode: zap-can



networks:
   ecommerce-microservice-network:
     driver: bridge
     # name: zap-can



# version: '3.4'

# services:
#   ordersmicroservice.api:
#     image: ordersmicroserviceapi
#     build:
#       context: .
#       dockerfile: OrdersMicroservice.API/Dockerfile
#     environment:
#      - MONGODB_HOST=mongodb-container
#      - MONGODB_PORT=27017
#      - MONGODB_DATABASE=OrdersDatabase
#      - UsersMicroserviceName=users-microservice
#      - UsersMicroservicePort=5000
#     ports:
#      - "7000:8080"
#     networks:
#      - orders-mongodb-network
#      - ecommerce-network
#     depends_on:
#      - mongodb-container


#   mongodb-container:
#    image: mongo:latest
#    ports:
#     - "27017:27017"
#    volumes:
#     - ../mongodb-init:/docker-entrypoint-initdb.d
#    networks:
#     - orders-mongodb-network
     

#   products-microservice:
#    image: products-microservice:latest
#    environment:
#     - ASPNETCORE_HTTP_PORTS=8080
#     - ASPNETCORE_ENVIRONMENT=Development
#     - MYSQL_HOST=mysql-container
#     - MYSQL_PORT=3306
#     - MYSQL_DATABASE=ecommerceproductsdatabase
#     - MYSQL_USER=root
#     - MYSQL_PASSWORD=admin
#    ports:
#     - "6000:8080"
#    networks:
#     - products-mysql-network
#     - ecommerce-network
#    depends_on:
#     - mysql-container
  

#   mysql-container:
#    image: mysql:8.0
#    environment:
#     - MYSQL_ROOT_PASSWORD=admin
#    ports:
#     - "3307:3306"
#    volumes:
#     - ../mysql-init:/docker-entrypoint-initdb.d
#    networks:
#     - products-mysql-network


#   users-microservice:
#    image: users-microservice:latest
#    environment:
#     - ASPNETCORE_HTTP_PORTS=8080
#     - ASPNETCORE_HTTP_ENVIRONMENT=Development
#     - POSTGRES_HOST=localhost
#     - POSTGRES_PORT=5432
#     - POSTGRES_DATABASE=eCommerceUsers
#     - POSTGRES_USER=postgres
#     - POSTGRES_PASSWORD=admin
#    ports:
#     - "5000:8080"
#    networks:
#     - users-postgres-network
#     - ecommerce-network
#    depends_on:
#     - postgres-container


#   postgres-container:
#    image: postgres:13
#    environment:
#     - POSTGRES_USER=postgres
#     - POSTGRES_PASSWORD=admin
#     - POSTGRES_DB=eCommerceUsers
#    ports:
#     - "5433:5432"
#    volumes:
#     - ../postgres-init:/docker-entrypoint-initdb.d
#    networks:
#     - users-postgres-network


# networks:
#  orders-mongodb-network:
#   driver: bridge
#  products-mysql-network:
#   driver: bridge
#  users-postgres-network:
#   driver: bridge
#  ecommerce-network:
#   driver: bridge


